/* ----------- GRID ------------- */

/*
- Grid Line: Son aquellas líneas que separan tanto el eje X como el eje Y.
- Grid Track: Corresponde a la banda horizontal de ítems contenidos en Grid.
- Grid Area: Es la zona compuesta por un conjunto de ítems verticales y horizontales.
- Grid Cell: Cada elemento cuadrado que está contenido por el Grid Padre.
- Item: Es el elemento dentro de una grid-cell.
 */

/* Para inicializar una cuadrícula grid, debemos utilizar un elemento contenedor, al cual le definimos la propiedad display junto al valor que deseamos aplicar: diplay: grid; */

/* grid es el valor que viene por defecto y equivale a iniciar los elementos en bloque.
inline-grid declara que los elementos estén definidos de manera contínua. */

/* Justify-content */
/* Esta propiedad mueve el contenido de manera horizontal. Se aplica sobre el elemento padre, pero afecta también a los elementos hijos.
● start
● end
● center
● stretch
● space-around
● space-between
● space-evenly */

/* align-content */
/* Esta propiedad mueve el contenido de manera vertical. Se aplica sobre el elemento padre, afectando también a los elementos hijos.
● start
● end
● center
● stretch
● space-around
● space-between
● space-evenly */

/* Grid-template-columns */
/* Esta propiedad permite declarar las columnas que poseerá nuestro grid. Dentro de los valores a definir en esta propiedad, podremos combinar diferentes tipos de 
medidas en un mismo diseño. */

/* Grid-template-rows */
/* Esta propiedad permite declarar las filas que poseerá nuestro grid. También podemos combinar diferentes tipos de medida, tal como vimos en grid-template-columns. */

/* 
- 1fr 2fr: Es una unidad de medida que proviene del término fracción. Equivale al porcentaje de la fracción de la pantalla.
- minmax(10px, 1fr): Podemos definir mínimos y máximos.
- repeat(5, 1fr): Podemos repetir N cantidad de veces una medida específica.
- 40px auto 100px 1fr: Aquí combinamos medidas estáticas con medidas automáticas y fracciones de la pantalla */

.grid-container {
    display: grid;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 80px 300px;
    background-color: #2196F3;
    padding: 10px;
    height: 100vh;
    /* gap: 10px; */
}

.grid-item {
    /* width: 100px; */
    /* height: 100px; */
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    /* padding: 20px; */
    /* font-size: 30px; */
    text-align: center;
}

/* Grid-columns - Grid-rows */
/* Para definir la posición y extensión de un elemento, o ítem, dentro de un contenedor Grid, podemos recurrir a las propiedades grid-column y grid-row.

Estas reglas nos permiten definir, por ejemplo, que un elemento se sitúe entre la segunda y tercera línea vertical, y entre la segunda y tercera línea horizontal.
*/

.box1{
    grid-column: 1 / 2 ;
    grid-row: 1 / 6;
}

.box2{
    grid-column: 2 / 3;
    grid-row: 1 / 3;
}

.box4{
    grid-column: 1 / span 2;
}